{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n// Описаний у документації\nimport iziToast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst startBtn = document.querySelector(\"[data-start]\");\nconst datetimePicker = document.getElementById(\"datetime-picker\");\nconst daysDisplay = document.querySelector(\"[data-days]\");\nconst hoursDisplay = document.querySelector(\"[data-hours]\");\nconst minutesDisplay = document.querySelector(\"[data-minutes]\");\nconst secondsDisplay = document.querySelector(\"[data-seconds]\");\n\nlet timer = null; \nconst currentDate = new Date();\nflatpickr(datetimePicker, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: currentDate, \n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const userSelectedDate = selectedDates[0];\n\n    if (!userSelectedDate || userSelectedDate <= currentDate) {\n      iziToast.warning({\n        title: \"Warning\",\n        message: \"Please choose a date and time in the future\",\n        position: \"topCenter\"\n      });\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n    }\n  }\n});\n\nclass Timer {\n  constructor(futureDate) {\n    this.futureDate = futureDate;\n    this.timerInterval = null;\n  }\n\n  start() {\n    const updateTimer = () => {\n      const currentTime = new Date();\n      const timeDifference = this.futureDate - currentTime;\n\n      if (timeDifference <= 0) {\n        clearInterval(this.timerInterval);\n        this.timerInterval = null;\n        this.updateDisplay({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n        return;\n      }\n\n      const { days, hours, minutes, seconds } = this.convertMs(timeDifference);\n      this.updateDisplay({ days, hours, minutes, seconds });\n    };\n\n    updateTimer();\n    this.timerInterval = setInterval(updateTimer, 1000);\n  }\n\n  convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n  }\n\n  updateDisplay({ days, hours, minutes, seconds }) {\n    daysDisplay.textContent = String(days).padStart(2, \"0\");\n    hoursDisplay.textContent = String(hours).padStart(2, \"0\");\n    minutesDisplay.textContent = String(minutes).padStart(2, \"0\");\n    secondsDisplay.textContent = String(seconds).padStart(2, \"0\");\n  }\n}\n\nstartBtn.addEventListener(\"click\", () => {\n  if (timer) {\n    iziToast.warning({\n      title: \"Warning\",\n      message: \"The timer is already running\",\n      position: \"topCenter\"\n    });\n    return;\n  }\n\n  const selectedDate = new Date(datetimePicker.value);\n\n  if (!selectedDate || selectedDate <= new Date()) {\n    iziToast.warning({\n      title: \"Warning\",\n      message: \"Please choose a date and time in the future\",\n      position: \"topCenter\"\n    });\n    return;\n  }\n\n  const timerInstance = new Timer(selectedDate);\n  timerInstance.start();\n  timer = timerInstance.timerInterval;\n  startBtn.disabled = true;\n});\n\n"],"names":["startBtn","datetimePicker","daysDisplay","hoursDisplay","minutesDisplay","secondsDisplay","timer","currentDate","flatpickr","selectedDates","userSelectedDate","iziToast","Timer","futureDate","updateTimer","currentTime","timeDifference","days","hours","minutes","seconds","ms","selectedDate","timerInstance"],"mappings":"+IAOA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAiB,SAAS,eAAe,iBAAiB,EAC1DC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAE9D,IAAIC,EAAQ,KACZ,MAAMC,EAAc,IAAI,KACxBC,EAAUP,EAAgB,CACxB,WAAY,GACZ,UAAW,GACX,YAAaM,EACb,gBAAiB,EACjB,QAAQE,EAAe,CACrB,MAAMC,EAAmBD,EAAc,CAAC,EAEpC,CAACC,GAAoBA,GAAoBH,GAC3CI,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,8CACT,SAAU,WAClB,CAAO,EACDX,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAEvB,CACH,CAAC,EAED,MAAMY,CAAM,CACV,YAAYC,EAAY,CACtB,KAAK,WAAaA,EAClB,KAAK,cAAgB,IACtB,CAED,OAAQ,CACN,MAAMC,EAAc,IAAM,CACxB,MAAMC,EAAc,IAAI,KAClBC,EAAiB,KAAK,WAAaD,EAEzC,GAAIC,GAAkB,EAAG,CACvB,cAAc,KAAK,aAAa,EAChC,KAAK,cAAgB,KACrB,KAAK,cAAc,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAG,CAAA,EAChE,MACD,CAED,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAK,KAAK,UAAUJ,CAAc,EACvE,KAAK,cAAc,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAAE,CAC1D,EAEIN,IACA,KAAK,cAAgB,YAAYA,EAAa,GAAI,CACnD,CAED,UAAUO,EAAI,CAMZ,MAAMJ,EAAO,KAAK,MAAMI,EAAK,KAAG,EAC1BH,EAAQ,KAAK,MAAOG,EAAK,MAAO,IAAI,EACpCF,EAAU,KAAK,MAAQE,EAAK,MAAO,KAAQ,GAAM,EACjDD,EAAU,KAAK,MAASC,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CAED,cAAc,CAAE,KAAAH,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC/ClB,EAAY,YAAc,OAAOe,CAAI,EAAE,SAAS,EAAG,GAAG,EACtDd,EAAa,YAAc,OAAOe,CAAK,EAAE,SAAS,EAAG,GAAG,EACxDd,EAAe,YAAc,OAAOe,CAAO,EAAE,SAAS,EAAG,GAAG,EAC5Dd,EAAe,YAAc,OAAOe,CAAO,EAAE,SAAS,EAAG,GAAG,CAC7D,CACH,CAEApB,EAAS,iBAAiB,QAAS,IAAM,CACvC,GAAIM,EAAO,CACTK,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,+BACT,SAAU,WAChB,CAAK,EACD,MACD,CAED,MAAMW,EAAe,IAAI,KAAKrB,EAAe,KAAK,EAElD,GAAI,CAACqB,GAAgBA,GAAgB,IAAI,KAAQ,CAC/CX,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,8CACT,SAAU,WAChB,CAAK,EACD,MACD,CAED,MAAMY,EAAgB,IAAIX,EAAMU,CAAY,EAC5CC,EAAc,MAAK,EACnBjB,EAAQiB,EAAc,cACtBvB,EAAS,SAAW,EACtB,CAAC"}